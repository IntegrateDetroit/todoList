{
	"info": {
		"_postman_id": "22548131-b690-4752-9cad-2de8fdf19151",
		"name": "8_User Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Delete User One",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "39a45f75-4fa4-4f49-884d-1001778ca818",
						"exec": [
							"/*var _ = require(\"lodash\");",
							"",
							"pm.test(\"Status code is 410\", function () {",
							"    pm.response.to.have.status(410);",
							"});",
							"",
							"",
							"pm.test(\"Has properties\", function () {",
							"    var expectedEmail = pm.environment.get(\"email_address\");",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.eMail).to.equal(expectedEmail);",
							"    pm.expect(_.has(jsonData, \"userID\")).true;",
							"    ",
							"    pm.environment.unset(\"email_address\");",
							"}); */"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"{{first_name}}\" ,\n  \"lastName\": \"{{last_name}}\" ,\n  \"eMail\": \"{{email_address}}\" ,\n  \"paswordHash\": \"{{password}}\" ,\n  \"signupDate\": \"{{signup_date}}\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/user/email/{{email_address}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"user",
						"email",
						"{{email_address}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User One",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fd677ea6-2a0a-4fb3-816b-32e82c9426f4",
						"exec": [
							"var _ = require(\"lodash\");",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"Has properties\", function () {",
							"    var expectedEmail = pm.environment.get(\"email_address\");",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.eMail).to.equal(expectedEmail);",
							"    pm.expect(_.has(jsonData, \"userID\")).true;",
							"    ",
							"    pm.environment.set(\"user_ID\", jsonData.userID)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"{{first_name}}\" ,\n  \"lastName\": \"{{last_name}}\" ,\n  \"eMail\": \"{{email_address}}\" ,\n  \"paswordHash\": \"{{password}}\" ,\n  \"signupDate\": \"{{signup_date}}\" \n}"
				},
				"url": {
					"raw": "http://localhost:8080/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User One",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "981e7b3d-b74d-4c3f-b019-484a5206aace",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"",
							"pm.test(\"Returned user has same userID\", function () {",
							"    var expectedUserID = parseInt( pm.environment.get(\"user_ID\") );",
							"    var expectedEmail = pm.environment.get(\"email_address\");",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userID).to.eql(expectedUserID);",
							"    ",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/user/email/{{email_address}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"user",
						"email",
						"{{email_address}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Can't Create User Twice",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1569a06f-6d13-4fbf-9bc0-e620e29c111d",
						"exec": [
							"var _ = require(\"lodash\");",
							"",
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"{{first_name2}}\" ,\n  \"lastName\": \"{{last_name2}}\" ,\n  \"eMail\": \"{{email_address2}}\" ,\n  \"passwordHash\": \"{{password2b}}\" ,\n  \"signupDate\": \"{{signup_date2b}}\"\n\t\n}"
				},
				"url": {
					"raw": "http://localhost:8080/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"user"
					]
				}
			},
			"response": []
		}
	]
}